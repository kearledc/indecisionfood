{"version":3,"sources":["serviceWorker.js","components/Action.js","components/AddKainan.js","components/Header.js","components/Option.js","components/Options.js","components/OptionModal.js","components/Indecision.js","index.js"],"names":["Boolean","window","location","hostname","match","Action","props","className","darkMode","onClick","kainanClick","disabled","hasOptions","AddKainan","useState","undefined","error","setErr","onSubmit","e","preventDefault","option","target","elements","kainSend","value","trim","errMsg","addKainan","type","kainanOption","name","onChange","setKainan","placeholder","Header","toggleChange","subtitle","Option","count","optionText","removeItem","Options","removeAll","options","length","map","index","key","OptionModal","ariaHideApp","isOpen","selectedOption","contentLabel","closeTimeoutMS","onRequestClose","closeModal","Indecision","optionsData","JSON","parse","localStorage","getItem","darkModeData","setOptions","setSelect","setDarkMode","useEffect","json","stringify","setItem","prevState","randomNum","Math","floor","random","selected","optionToRemove","filter","kainan","indexOf","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c9433a22.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\n\r\nconst Action = (props) => {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<button\r\n\t\t\t\tclassName={props.darkMode ? \"button__big_dark\" : \"button__big\"}\r\n\t\t\t\tonClick={props.kainanClick}\r\n\t\t\t\tdisabled={!props.hasOptions}\r\n\t\t\t>\r\n\t\t\t\tSaan Nga Ba?\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Action;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AddKainan = (props) => {\r\n\tconst [error, setErr] = useState(undefined);\r\n\r\n\tconst onFormSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst option = e.target.elements.kainSend.value.trim();\r\n\t\tconst errMsg = props.addKainan(option);\r\n\r\n\t\tsetErr(errMsg);\r\n\r\n\t\tif (!error) {\r\n\t\t\te.target.elements.kainSend.value = \"\";\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t{error && (\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName={\r\n\t\t\t\t\t\tprops.darkMode\r\n\t\t\t\t\t\t\t? \"add-form-error-text add-form-error-text__dark\"\r\n\t\t\t\t\t\t\t: \"add-form-error-text\"\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\t\t\t<form onSubmit={onFormSubmit} className=\"add-form__container\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tvalue={props.kainanOption}\r\n\t\t\t\t\tname=\"kainSend\"\r\n\t\t\t\t\tonChange={(e) => props.setKainan(e.target.value.trim())}\r\n\t\t\t\t\tclassName=\"add-form__input\"\r\n\t\t\t\t\tplaceholder=\"Add Kainan Here\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"button\">Add Kainan</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddKainan;\r\n","import React from \"react\";\r\n\r\nconst Header = (props) => (\r\n\t<div\r\n\t\tclassName={props.darkMode ? \"header darkHeader\" : \"header lightHeader\"}\r\n\t>\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"header__container\">\r\n\t\t\t\t<h2 className=\"header__title\">Indecision</h2>\r\n\t\t\t\t<label className=\"switch\">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{props.darkMode ? (\r\n\t\t\t\t\t\t\t<i className=\"fas fa-moon header__icon dark\"></i>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<i className=\"fas fa-sun header__icon\"></i>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<input type=\"checkbox\" onChange={props.toggleChange} />\r\n\t\t\t\t\t<span className=\"slider round\"></span>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t\t{props.subtitle && (\r\n\t\t\t\t<h2 className=\"header__subtitle\">{props.subtitle}</h2>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Option = (props) => (\r\n\t<div className={props.darkMode ? \"option option-dark\" : \"option\"}>\r\n\t\t<p className=\"option-text\">\r\n\t\t\t{props.count}. {props.optionText}\r\n\t\t</p>\r\n\t\t<button\r\n\t\t\tclassName={\r\n\t\t\t\tprops.darkMode\r\n\t\t\t\t\t? \"button--link button--link-dark button\"\r\n\t\t\t\t\t: \"button--link button\"\r\n\t\t\t}\r\n\t\t\tonClick={(e) => props.removeItem(props.optionText)}\r\n\t\t>\r\n\t\t\tRemove\r\n\t\t</button>\r\n\t</div>\r\n);\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport Option from \"./Option\";\r\n\r\nconst Options = (props) => (\r\n\t<div className=\"container\">\r\n\t\t<div\r\n\t\t\tclassName={\r\n\t\t\t\tprops.darkMode\r\n\t\t\t\t\t? \"options__widget options__widget-dark\"\r\n\t\t\t\t\t: \"options__widget\"\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<h3 className=\"options__widget-title\">Kainan Options:</h3>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tprops.darkMode\r\n\t\t\t\t\t\t? \"button--link button--link-dark button\"\r\n\t\t\t\t\t\t: \"button--link button\"\r\n\t\t\t\t}\r\n\t\t\t\tonClick={props.removeAll}\r\n\t\t\t>\r\n\t\t\t\tRemove All\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t\t{props.options.length === 0 && (\r\n\t\t\t<p className=\"options__widget-body\">Please Add An Option!</p>\r\n\t\t)}\r\n\t\t{props.options.map((option, index) => (\r\n\t\t\t<Option\r\n\t\t\t\tcount={index + 1}\r\n\t\t\t\toptionText={option}\r\n\t\t\t\tkey={option}\r\n\t\t\t\tremoveItem={props.removeItem}\r\n\t\t\t\tdarkMode={props.darkMode}\r\n\t\t\t/>\r\n\t\t))}\r\n\t</div>\r\n);\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst OptionModal = (props) => (\r\n\t<Modal\r\n\t\tariaHideApp={false}\r\n\t\tisOpen={!!props.selectedOption}\r\n\t\tcontentLabel=\"Selected Option\"\r\n\t\tcloseTimeoutMS={200}\r\n\t\tonRequestClose={props.closeModal}\r\n\t\tclassName=\"modal\"\r\n\t>\r\n\t\t<h3 className=\"modal__title\">We Chose:</h3>\r\n\t\t{props.selectedOption && (\r\n\t\t\t<p className=\"modal__body\">{props.selectedOption}</p>\r\n\t\t)}\r\n\t\t<button onClick={props.closeModal} className=\"button\">\r\n\t\t\tOkay\r\n\t\t</button>\r\n\t</Modal>\r\n);\r\n\r\nexport default OptionModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Action from \"./Action\";\r\nimport AddKainan from \"./AddKainan\";\r\nimport Header from \"./Header\";\r\nimport Options from \"./Options\";\r\nimport OptionModal from \"./OptionModal\";\r\n\r\nconst Indecision = () => {\r\n\tconst optionsData = JSON.parse(localStorage.getItem(\"kainOptions\"));\r\n\tconst darkModeData = JSON.parse(localStorage.getItem(\"darkmode\"));\r\n\tconst [options, setOptions] = useState(optionsData || []);\r\n\tconst [kainanOption, setKainan] = useState(\"\");\r\n\tconst [selectedOption, setSelect] = useState(undefined);\r\n\tconst [darkMode, setDarkMode] = useState(darkModeData || false);\r\n\r\n\tconst toggleChange = () => {\r\n\t\tsetDarkMode((prevState) => !prevState);\r\n\t};\r\n\r\n\tconst addKainan = (option) => {\r\n\t\tif (!option) {\r\n\t\t\treturn \"Enter Valid Option!!\";\r\n\t\t} else if (options.indexOf(option) > -1) {\r\n\t\t\treturn \"This Option Already Exists!!\";\r\n\t\t}\r\n\r\n\t\tsetOptions([...options, kainanOption]);\r\n\t\tsetKainan(\"\");\r\n\t};\r\n\r\n\tconst kainanClick = (option) => {\r\n\t\tconst randomNum = Math.floor(Math.random() * options.length);\r\n\t\tconst selected = options[randomNum];\r\n\t\tsetSelect(selected);\r\n\t};\r\n\r\n\tconst removeAll = () => setOptions([]);\r\n\r\n\tconst removeItem = (optionToRemove) => {\r\n\t\tsetOptions((option) =>\r\n\t\t\toption.filter((kainan) => optionToRemove !== kainan)\r\n\t\t);\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetSelect(undefined);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst json = JSON.stringify(options);\r\n\t\tlocalStorage.setItem(\"kainOptions\", json);\r\n\t}, [options]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst json = JSON.stringify(darkMode);\r\n\t\tlocalStorage.setItem(\"darkmode\", json);\r\n\t}, [darkMode]);\r\n\r\n\tconst subtitle = \"Saan kayo kakain ni Love One?\";\r\n\r\n\treturn (\r\n\t\t<div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\r\n\t\t\t<Header\r\n\t\t\t\tsubtitle={subtitle}\r\n\t\t\t\ttoggleChange={toggleChange}\r\n\t\t\t\tdarkMode={darkMode}\r\n\t\t\t/>\r\n\t\t\t<Action\r\n\t\t\t\tkainanClick={kainanClick}\r\n\t\t\t\thasOptions={options.length > 0}\r\n\t\t\t\tdarkMode={darkMode}\r\n\t\t\t/>\r\n\t\t\t<Options\r\n\t\t\t\tremoveAll={removeAll}\r\n\t\t\t\toptions={options}\r\n\t\t\t\tremoveItem={removeItem}\r\n\t\t\t\tdarkMode={darkMode}\r\n\t\t\t/>\r\n\t\t\t<AddKainan\r\n\t\t\t\tkainanOption={kainanOption}\r\n\t\t\t\taddKainan={addKainan}\r\n\t\t\t\tsetKainan={setKainan}\r\n\t\t\t\tdarkMode={darkMode}\r\n\t\t\t/>\r\n\t\t\t<OptionModal\r\n\t\t\t\tselectedOption={selectedOption}\r\n\t\t\t\tcloseModal={closeModal}\r\n\t\t\t\tdarkMode={darkMode}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Indecision;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Indecision from \"./components/Indecision\";\nimport \"./styles/style.css\";\n\nReactDOM.render(<Indecision />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}